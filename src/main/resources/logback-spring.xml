<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true">

    <!-- Spring 외부 설정과 연동 가능한 프로퍼티 (선택) -->
    <springProperty scope="context" name="LOG_VIEW_BUFFER" source="logging.view.buffer" defaultValue="2000"/>
    <springProperty scope="context" name="LOG_VIEW_LEVEL"  source="logging.view.level"  defaultValue="INFO"/>

    <!-- 콘솔(App stdout) 출력: 컨테이너 로그용 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n%ex{full}</pattern>
        </encoder>
    </appender>

    <!-- 메모리 링버퍼: 최근 N줄만 유지, API에서 읽어감 -->
    <appender name="INMEMORY" class="ch.qos.logback.core.read.CyclicBufferAppender">
        <!-- 최대 보관 라인 수 -->
        <maxSize>${LOG_VIEW_BUFFER}</maxSize>
        <!-- DEBUG/TRACE 제외하고 싶으면 ThresholdFilter를 INFO로 놓기 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>${LOG_VIEW_LEVEL}</level> <!-- 기본 INFO -->
        </filter>
    </appender>

    <!-- (선택) ERROR만 파일 보관: 장애 추적용 최소 보관 -->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>logs/error.%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>7</maxHistory>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n%ex{full}</pattern>
        </encoder>
    </appender>

    <!-- 루트 로거: 콘솔 + 메모리(웹 API용) (+옵션: ERROR 파일) -->
    <root level="INFO">
        <appender-ref ref="CONSOLE" />
        <appender-ref ref="INMEMORY" />
        <appender-ref ref="ERROR_FILE" />
    </root>
</configuration>
